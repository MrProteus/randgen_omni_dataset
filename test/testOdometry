#! /usr/bin/env python

import rospy
import randgen_omni_dataset.odometry
import unittest

LOG_LEVEL = rospy.DEBUG
INIT_SEED = None


def change_states():
    odom.change_state('WalkForward')
    odom.change_state('Rotate')
    odom.change_state('Rotate')


def rng():
    print 'RNG = %f' % odom.get_rand_type('x')
    print 'RNG = %f' % odom.get_rand_type('y')
    print 'RNG for all variables'
    print odom.get_rand_all()
    print odom.get_rand_all()


class OdometryTestCases(unittest.TestCase):
    def test_states(self):
        change_states()
        with self.assertRaises(KeyError):
            val = odom.change_state('NotValid')
            print val

        self.assertEqual(odom.get_state(), odom.stateTypes['Rotate'])

    def test_rng(self):
        rng()
        with self.assertRaises(KeyError):
            odom.get_rand_type('z')

if __name__ == '__main__':
    rospy.init_node('test_odometry', log_level=LOG_LEVEL)
    odom = randgen_omni_dataset.odometry.Odometry(INIT_SEED)

    unittest.main()